import { Component, ViewChild } from '@angular/core';
import { Platform, IonicApp, Nav, ModalController, Keyboard, ToastController, NavParams, Events } from 'ionic-angular';
import { NativeService } from "../providers/NativeService";
import { Helper } from "../providers/Helper";
import { GlobalData } from "../providers/GlobalData";
import { Storage } from "@ionic/storage";
import { FormsModule } from '@angular/forms';
import { TabsPage } from '../pages/tabs/tabs';
import {LoginInfo, UserInfo} from "../model/UserInfo";
import { SignInPage } from "../pages/login/sign-in/sign-in";
import { OrderPage } from '../pages/mine/order/order';
import { AboutPage } from '../pages/mine/about/about';
import {SIGN_IN_TO_DISMISS} from "../providers/Constants";

@Component({
  templateUrl: 'app.html'

})
export class MyApp {
  @ViewChild('myNav') nav: Nav;
  rootPage: any = TabsPage;
  backButtonPressed: boolean = false;
  pound: any;
  userInfo: UserInfo;

  constructor(private platform: Platform,
              private keyboard: Keyboard,
              private ionicApp: IonicApp,
              private storage: Storage,
              private globalData: GlobalData,
              private helper: Helper,
              private app: IonicApp,
              private toastCtrl: ToastController,
              private modalCtrl: ModalController,
              private events: Events,
              private nativeService: NativeService) {
    platform.ready().then(() => {
      // Okay, so the platform is ready and our plugins are available.
      // Here you can do any higher level native things you might need.
      this.nativeService.statusBarStyleDefault();
      this.nativeService.splashScreenHide();
      var str = document.location.href;
      var index = str.indexOf('?');
      if (index > -1) {
        var params: any;
        let key = document.location.href.substring(document.location.href.length - 7);
        let parts: any = key.split("=");

        if (parts[1] == '4') {
          this.storage.get('wx_user').then((user: UserInfo) => { //从缓存中获取token
            if (user) {
              this.userInfo = user;
              this.nav.setRoot(OrderPage, {status: 0, userid: this.userInfo.Userid});
            } else {
              let modal = this.modalCtrl.create(SignInPage, {from: 'wx_menu_order'});
              modal.present();
              modal.onDidDismiss(data => {
                if (data){
                  this.userInfo = data;
                  this.nav.setRoot(OrderPage, {status: 0, userid: this.userInfo.Userid});
                } else {
                  this.nativeService.alertTip("登录失败");
                }
              })
            }
          });
        }
        else if (parts[1] == '5') {
          this.nav.setRoot(AboutPage);
        }

      }

      this.registerBackButtonAction();//注册返回按键事件
      this.assertNetwork();//检测网络
    });
  }


  assertNetwork() {
    if (!this.nativeService.isConnecting()) {
      this.toastCtrl.create({
        message: '未检测到网络,请连接网络',
        showCloseButton: true,
        closeButtonText: '确定'
      }).present();
    }
  }

  registerBackButtonAction() {
    if (!this.nativeService.isAndroid()) {
      return;
    }
    this.platform.registerBackButtonAction(() => {
      if (this.keyboard.isOpen()) {//如果键盘开启则隐藏键盘
        this.keyboard.close();
        return;
      }
      //如果想点击返回按钮隐藏toast或loading或Overlay就把下面加上
      // this.ionicApp._toastPortal.getActive() ||this.ionicApp._loadingPortal.getActive()|| this.ionicApp._overlayPortal.getActive()
      let activePortal = this.ionicApp._modalPortal.getActive();
      if (activePortal) {
        activePortal.dismiss();
        return;
      }
      let activeVC = this.nav.getActive();
      let tabs = activeVC.instance.tabs;
      let activeNav = tabs.getSelected();
      return activeNav.canGoBack() ? activeNav.pop() : this.nativeService.minimize();//this.showExit()

    }, 1);
  }
  //双击退出提示框
  showExit() {
    if (this.backButtonPressed) { //当触发标志为true时，即2秒内双击返回按键则退出APP
      this.platform.exitApp();
    } else {
      this.nativeService.showToast('再按一次退出应用');
      this.backButtonPressed = true;
      setTimeout(() => { //2秒内没有再次点击返回则将触发标志标记为false
        this.backButtonPressed = false;
      }, 2000)
    }
  }
}
